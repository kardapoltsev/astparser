rules = [
  RemoveUnused,
  ProcedureSyntax,
  DisableSyntax,
  LeakingImplicitClassVal,
  NoValInForComprehension,
  OrganizeImports
]

RemoveUnused.imports = false
RemoveUnused.privates = true
RemoveUnused.locals = true
RemoveUnused.patternvars = true

DisableSyntax {
  noVars = false
  noThrows = false
  noNulls = true
  noReturns = true
  noWhileLoops = true
  noAsInstanceOf = false
  noIsInstanceOf = false
  noXml = false
  noDefaultArgs = false
  noFinalVal = false
  noFinalize = true
  noValPatterns = false
  noUniversalEquality = false
  noUniversalEqualityMessage = "== is unsafe since it allows comparing two unrelated types"
  regex = [
    {
      id = "println"
      pattern = "println"
      message = "Use logger instead of println"
    },
    {
      id = "FutureUnit"
      pattern = "Future\\[_\\]"
      message = "Use Future[Unit] instead"
    }
  ]
}

OrganizeImports {
  blankLines = Auto
  coalesceToWildcardImportThreshold = null
  expandRelative = false
  groupExplicitlyImportedImplicitsSeparately = false
  groupedImports = Explode
  groups = [
    "*"
    "re:(javax?|scala)\\."
  ]
  importSelectorsOrder = Ascii
  importsOrder = Ascii
  preset = DEFAULT
  removeUnused = true
}
